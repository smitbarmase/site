---
import { getCollection, render } from "astro:content";

import Layout from "../layouts/Layout.astro";
import { SITE_TITLE } from "../constants";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const filteredPosts = allPosts.map((post) => ({
    params: { slug: post.id === "index" ? "/" : post.id },
    props: { post },
  }));
  return filteredPosts;
}

const { post } = Astro.props;
const { Content } = await render(post);

const allPosts = await getCollection("posts");

const formattedDate = post.data.date
  ? `${post.data.date.toLocaleDateString("en-US", {
      weekday: "short",
      year: "numeric",
      month: "short",
      day: "numeric",
    })} at ${post.data.date.toLocaleTimeString("en-US", {
      hour: "numeric",
      minute: "2-digit",
      hour12: true,
    })}`
  : "";

const isIndex = post.id === "index";
---

<Layout title={`${post.data.title} - ${SITE_TITLE}`}>
  <h1>{post.data.title}</h1>
  <Content />
  {
    isIndex && (
      <ul>
        {allPosts
          .filter((post) => post.id !== "index")
          .map((post) => (
            <li>
              <a href={post.id}>{post.data.title}</a>
            </li>
          ))}
      </ul>
    )
  }
  {
    post.data.date && (
      <p>
        <time datetime={post.data.date.toISOString()}>
          Posted on {formattedDate}
        </time>
      </p>
    )
  }
</Layout>
